import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)
import java.util.ArrayList;
import java.util.List;

/**
 * Write a description of class Cliffs here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Cliffs extends World
{
    int countJellies =0;
    int oldAbsY = 0;
    private List<Platform> thePlatforms = new ArrayList<Platform>();
    private List<Jellyfish> theJellyfish = new ArrayList<Jellyfish>();
    private int[][] platformCoords = {
            {10,530}, {40,530}, {70, 530}, {100,530}, {130,530}, {160,530},
            {100, 465}, {130, 465}, {160, 465}, {190, 465}, {210, 465},
            {390, 400}, {360, 400}, {330, 400}, {300, 400}, {270, 400},
            {60, 370}, {90, 370}, {120, 370}, {150, 370},
            {260, 300}, {290, 300}, {320, 300},
            {130, 250}, {160, 250}, {190, 250},
            {260, 210}, {290, 210}, {320, 210},            
            {10, 170}, {40, 170}, {70, 170}, {100, 170},
            {130, 100}, {160, 100}, {190, 100},            
            {10, 40}, {40, 40}, {70, 40}, {100, 40},           
            {300, -10}, {330, -10}, {360, -10}, {390, -10},           
            {150, -60}, {180, -60}, {210, -60},            
            {10, -120}, {40, -120}, {70, -120}, {100, -120},           
            {310, -130}, {340, -130}, {370, -130}, {390, -130},       
            {180, -180}, {210, -180}, {240, -180},            
            {10, -250}, {40, -250}, {70, -250}, {90, -250},       
            {220, -320}, {250, -320}, {280, -320}, {310, -320},            
            {10,-390}, {40,-390}, {70, -390}, {100,-390}, {130,-390}, {160,-390},
            {100, -470}, {130, -470}, {160, -470}, {190, -470}, {210, -470},
            {390, -550}, {360, -550}, {330, -550}, {300, -550}, {270, -550},
            {60, -610}, {90, -610}, {120, -610}, {150, -610},
            {260, -680}, {290, -680}, {320, -680},
            {130, -750}, {160, -750}, {190, -750},
            {10, -820}, {30, -820}, {60, -820},            
            {260, -820}, {290, -820}, {320, -820},            
            {10, -900}, {40, -900}, {70, -900}, {100, -900},
            {220, -940}, {250, -940}, {280, -940}, {310, -940},            
            {300, -1010}, {330, -1010}, {360, -1010}, {390, -1010},           
            {150, -1060}, {180, -1060}, {210, -1060},            
            {10, -1120}, {40, -1120}, {70, -1120}, {100, -1120},           
            {310, -1130}, {340, -1130}, {370, -1130}, {390, -1130},       
            {180, -1180}, {210, -1180}, {240, -1180},            
            {10, -1250}, {40, -1250}, {70, -1250}, {90, -1250},       
            {220, -1320}, {250, -1320}, {280, -1320}, {310, -1320},            
            {10,-1390}, {40,-1390}, {70, -1390}, {100,-1390}, {130,-1390}, {160,-1390},
            {100, -1470}, {130, -1470}, {160, -1470}, {190, -1470}, {210, -1470},
            {390, -1550}, {360, -1550}, {330, -1550}, {300, -1550}, {270, -1550},
            {60, -1610}, {90, -1610}, {120, -1610}, {150, -1610},
            {260, -1680}, {290, -1680}, {320, -1680},
            {130, -1750}, {160, -1750}, {190, -1750},
            {10, -1820}, {30, -1820}, {60, -1820},            
            {260, -1820}, {290, -1820}, {320, -1820},            
            {10, -1900}, {40, -1900}, {70, -1900}, {100, -1900},
            {220, -1940}, {250, -1940}, {280, -1940}, {310, -1940},            
            {300, -2010}, {330, -2010}, {360, -2010}, {390, -2010},           
            {150, -2060}, {180, -2060}, {210, -2060},            
            {10, -2120}, {40, -2120}, {70, -2120}, {100, -2120},           
            {310, -2130}, {340, -2130}, {370, -2130}, {390, -2130},       
            {180, -2180}, {210, -2180}, {240, -2180},            
            {10, -2250}, {40, -2250}, {70, -2250}, {90, -2250},       
            {220, -2320}, {250, -2320}, {280, -2320}, {310, -2320},            
            {10,-2390}, {40,-2390}, {70, -2390}, {100,-2390}, {130,-2390}, {160,-2390},
            {100, -2470}, {130, -2470}, {160, -2470}, {190, -2470}, {210, -2470},
            {390, -2550}, {360, -2550}, {330, -2550}, {300, -2550}, {270, -2550},
            {60, -2610}, {90, -2610}, {120, -2610}, {150, -2610},
            {260, -2680}, {290, -2680}, {320, -2680},
            {130, -2750}, {160, -2750}, {190, -2750},
            {10, -2820}, {30, -2820}, {60, -2820},            
            {260, -2820}, {290, -2820}, {320, -2820},            
            {10, -2900}, {40, -2900}, {70, -2900}, {100, -2900},
            {220, -2940}, {250, -2940}, {280, -2940}, {310, -2940},            
            {300, -3010}, {330, -3010}, {360, -3010}, {390, -3010},           
            {150, -3060}, {180, -3060}, {210, -3060},            
            {10, -3120}, {40, -3120}, {70, -3120}, {100, -3120},           
            {310, -3130}, {340, -3130}, {370, -3130}, {390, -3130},       
            {180, -3180}, {210, -3180}, {240, -3180},            
            {10, -3250}, {40, -3250}, {70, -3250}, {90, -3250},       
            {220, -3320}, {250, -3320}, {280, -3320}, {310, -3320},            
            {10,-3390}, {40,-3390}, {70, -3390}, {100,-3390}, {130,-3390}, {160,-3390},
            {100, -3470}, {130, -3470}, {160, -3470}, {190, -3470}, {210, -3470},
            {390, -3550}, {360, -3550}, {330, -3550}, {300, -3550}, {270, -3550},
            {60, -3610}, {90, -3610}, {120, -3610}, {150, -3610},
            {260, -3680}, {290, -3680}, {320, -3680},
            {130, -3750}, {160, -3750}, {190, -3750},
            {10, -3820}, {30, -3820}, {60, -3820},            
            {260, -3820}, {290, -3820}, {320, -3820},            
            {10, -3900}, {40, -3900}, {70, -3900}, {100, -3900},
            {220, -3940}, {250, -3940}, {280, -3940}, {310, -3940},            
            {300, -4010}, {330, -4010}, {360, -4010}, {390, -4010},           
            {150, -4060}, {180, -4060}, {210, -4060},            
            {10, -4120}, {40, -4120}, {70, -4120}, {100, -4120},           
            {310, -4130}, {340, -4130}, {370, -4130}, {390, -4130},       
            {180, -4180}, {210, -4180}, {240, -4180},            
            {10, -4250}, {40, -4250}, {70, -4250}, {90, -4250},       
            {220, -4320}, {250, -4320}, {280, -4320}, {310, -4320},            
            {10,-4390}, {40,-4390}, {70, -4390}, {100,-4390}, {130,-4390}, {160,-4390},
            {100, -4470}, {130, -4470}, {160, -4470}, {190, -4470}, {210, -4470},
            {390, -4550}, {360, -4550}, {330, -4550}, {300, -4550}, {270, -4550},
            {60, -4610}, {90, -4610}, {120, -4610}, {150, -4610},
            {260, -4680}, {290, -4680}, {320, -4680},
            {130, -4750}, {160, -4750}, {190, -4750},
            {10, -4820}, {30, -4820}, {60, -4820},            
            {260, -4820}, {290, -4820}, {320, -4820},            
            {10, -4900}, {40, -4900}, {70, -4900}, {100, -4900},
            {220, -4940}, {250, -4940}, {280, -4940}, {310, -4940},            
            {300, -5010}, {330, -5010}, {360, -5010}, {390, -5010},           
            {150, -5060}, {180, -5060}, {210, -5060},            
            {10, -5120}, {40, -5120}, {70, -5120}, {100, -5120},           
            {310, -5130}, {340, -5130}, {370, -5130}, {390, -5130},       
            {180, -5180}, {210, -5180}, {240, -5180},            
            {10, -5250}, {40, -5250}, {70, -5250}, {90, -5250},       
            {220, -5320}, {250, -5320}, {280, -5320}, {310, -5320},            
            {10,-5390}, {40,-5390}, {70, -5390}, {100,-5390}, {130,-5390}, {160,-5390},
            {100, -5470}, {130, -5470}, {160, -5470}, {190, -5470}, {210, -5470},
            {390, -5550}, {360, -5550}, {330, -5550}, {300, -5550}, {270, -5550},
            {60, -5610}, {90, -5610}, {120, -5610}, {150, -5610},
            {260, -5680}, {290, -5680}, {320, -5680},
            {130, -5750}, {160, -5750}, {190, -5750},
            {10, -5820}, {30, -5820}, {60, -5820},            
            {260, -5820}, {290, -5820}, {320, -5820},            
            {10, -5900}, {40, -5900}, {70, -5900}, {100, -5900},
            {220, -5940}, {250, -5940}, {280, -5940}, {310, -5940},            
            {300, -6010}, {330, -6010}, {360, -6010}, {390, -6010},           
            {150, -6060}, {180, -6060}, {210, -6060},            
            {10, -6120}, {40, -6120}, {70, -6120}, {100, -6120},           
            {310, -6130}, {340, -6130}, {370, -6130}, {390, -6130},       
            {180, -6180}, {210, -6180}, {240, -6180},            
            {10, -6250}, {40, -6250}, {70, -6250}, {90, -6250},       
            {220, -6320}, {250, -6320}, {280, -6320}, {310, -6320},            
            {10,-6390}, {40,-6390}, {70, -6390}, {100,-6390}, {130,-6390}, {160,-6390},
            {100, -6470}, {130, -6470}, {160, -6470}, {190, -6470}, {210, -6470},
            {390, -6550}, {360, -6550}, {330, -6550}, {300, -6550}, {270, -6550},
            {60, -6610}, {90, -6610}, {120, -6610}, {150, -6610},
            {260, -6680}, {290, -6680}, {320, -6680},
            {130, -6750}, {160, -6750}, {190, -6750},
            {10, -6820}, {30, -6820}, {60, -6820},            
            {260, -6820}, {290, -6820}, {320, -6820},            
            {10, -6900}, {40, -6900}, {70, -6900}, {100, -6900},
            {220, -6940}, {250, -6940}, {280, -6940}, {310, -6940},            
            {300, -7010}, {330, -7010}, {360, -7010}, {390, -7010},           
            {150, -7060}, {180, -7060}, {210, -7060},            
            {10, -7120}, {40, -7120}, {70, -7120}, {100, -7120},           
            {310, -7130}, {340, -7130}, {370, -7130}, {390, -7130},       
            {180, -7180}, {210, -7180}, {240, -7180},            
            {10, -7250}, {40, -7250}, {70, -7250}, {90, -7250},       
            {220, -7320}, {250, -7320}, {280, -7320}, {310, -7320},            
            {10,-7390}, {40,-7390}, {70, -7390}, {100,-7390}, {130,-7390}, {160,-7390},
            {100, -7470}, {130, -7470}, {160, -7470}, {190, -7470}, {210, -7470},
            {390, -7550}, {360, -7550}, {330, -7550}, {300, -7550}, {270, -7550},
            {60, -7610}, {90, -7610}, {120, -7610}, {150, -7610},
            {260, -7680}, {290, -7680}, {320, -7680},
            {130, -7750}, {160, -7750}, {190, -7750},
            {10, -7820}, {30, -7820}, {60, -7820},            
            {260, -7820}, {290, -7820}, {320, -7820},            
            {10, -7900}, {40, -7900}, {70, -7900}, {100, -7900},
            {220, -7940}, {250, -7940}, {280, -7940}, {310, -7940},            
            {300, -8010}, {330, -8010}, {360, -8010}, {390, -8010},           
            {150, -8060}, {180, -8060}, {210, -8060},            
            {10, -8120}, {40, -8120}, {70, -8120}, {100, -8120},           
            {310, -8130}, {340, -8130}, {370, -8130}, {390, -8130},       
            {180, -8180}, {210, -8180}, {240, -8180},            
            {10, -8250}, {40, -8250}, {70, -8250}, {90, -8250},       
            {220, -8320}, {250, -8320}, {280, -8320}, {310, -8320},            
            {10,-8390}, {40,-8390}, {70, -8390}, {100,-8390}, {130,-8390}, {160,-8390},
            {100, -8470}, {130, -8470}, {160, -8470}, {190, -8470}, {210, -8470},
            {390, -8550}, {360, -8550}, {330, -8550}, {300, -8550}, {270, -8550},
            {60, -8610}, {90, -8610}, {120, -8610}, {150, -8610},
            {260, -8680}, {290, -8680}, {320, -8680},
            {130, -8750}, {160, -8750}, {190, -8750},
            {10, -8820}, {30, -8820}, {60, -8820},            
            {260, -8820}, {290, -8820}, {320, -8820},            
            {10, -8900}, {40, -8900}, {70, -8900}, {100, -8900},
            {220, -8940}, {250, -8940}, {280, -8940}, {310, -8940},            
            {300, -9010}, {330, -9010}, {360, -9010}, {390, -9010},           
            {150, -9060}, {180, -9060}, {210, -9060},            
            {10, -9120}, {40, -9120}, {70, -9120}, {100, -9120},           
            {310, -9130}, {340, -9130}, {370, -9130}, {390, -9130},       
            {180, -9180}, {210, -9180}, {240, -9180},            
            {10, -9250}, {40, -9250}, {70, -9250}, {90, -9250},       
            {220, -9320}, {250, -9320}, {280, -9320}, {310, -9320},            
            {10,-9390}, {40,-9390}, {70, -9390}, {100,-9390}, {130,-9390}, {160,-9390},
            {100, -9470}, {130, -9470}, {160, -9470}, {190, -9470}, {210, -9470},
            {390, -9550}, {360, -9550}, {330, -9550}, {300, -9550}, {270, -9550},
            {60, -9610}, {90, -9610}, {120, -9610}, {150, -9610},
            {260, -9680}, {290, -9680}, {320, -9680},
            {130, -9750}, {160, -9750}, {190, -9750},
            {10, -9820}, {30, -9820}, {60, -9820},            
            {260, -9820}, {290, -9820}, {320, -9820},            
            {10, -9900}, {40, -9900}, {70, -9900}, {100, -9900},
            {220, -9940}, {250, -9940}, {280, -9940}, {310, -9940},            
        };

    /**
     * Constructor for objects of class Cliffs.
     * 
     */
    JetPackGuy theGuy;
    diags theDiags;
    ScoreCounter counter = new ScoreCounter();
    HealthCounter health = new HealthCounter();
    public Cliffs()
    {    
        // Create a new world with 600x400 cells with a cell size of 1x1 pixels.

        super(400, 600, 1);
        theGuy = new JetPackGuy();
        theDiags = new diags();
        addObject(theGuy, 200, getHeight()-(theGuy.getImage().getHeight()/2));
        //addObject(theDiags, 200, 20);
        addObject(counter, 350, 15);
        addObject(health, 200, 15);
        prepare();
    }
    public ScoreCounter giveCounter()
    {
        return counter;
    }
    public HealthCounter giveHealth()
    {
        return health;
    }
    public boolean worldHasMoved()
    {
        int absY = theGuy.absY;
        boolean hasMoved = oldAbsY != absY;
        oldAbsY = absY;
        return hasMoved;
    }
    public JetPackGuy getGuy(){
        return theGuy;
    }

    /**
     * Prepare the world for the start of the program. That is: create the initial
     * objects and add them to the world.
     */
    private void prepare()
    {

        for(int i=0;i<platformCoords.length;i++)
        {
            thePlatforms.add(new Platform());
            if(platformCoords[i][0]>0 && platformCoords[i][0]<getWidth() && platformCoords[i][1]>0 && platformCoords[i][1] < getHeight())
            {
                addObject(thePlatforms.get(i), platformCoords[i][0], platformCoords[i][1]);
            }

        }
        for(int i=0;i<3; i++)
        {
            int jellyY = getJellyY(i);
            int jellyX = getJellyX();
            addJellyfish(jellyX,jellyY);
        }
    }
    public int getJellyX()
    {
        return Greenfoot.getRandomNumber(getWidth()-100)+50;
    }
    public int getJellyY(int level)
    {
        return Greenfoot.getRandomNumber(getHeight()/4) + level*getHeight()/4+60;
    }
    public void addJellyfish(int x,int y)
    {
        Jellyfish thisJellyfish = new Jellyfish();
        theJellyfish.add(thisJellyfish);
        addObject(thisJellyfish,x,y);
        countJellies++;
    }

    public void removeJellyfish(Actor jellyfish)
    {
        removeObject(jellyfish);
        theJellyfish.remove(jellyfish);
    }

    public void moveWorld(int amount)
    {
        for(int i=0;i<platformCoords.length;i++)
        {
            platformCoords[i][1]=platformCoords[i][1]+ amount;
            Actor thisPlatform = thePlatforms.get(i);
            if(platformCoords[i][0]>0 && platformCoords[i][0]<getWidth() && platformCoords[i][1]>0 && platformCoords[i][1] < getHeight())
            {

                if(thisPlatform.getWorld()==null)
                {
                    addObject(thisPlatform, platformCoords[i][0], platformCoords[i][1]);
                } else {
                    thisPlatform.setLocation( platformCoords[i][0], platformCoords[i][1]);
                }
            } else if(thisPlatform.getWorld()!=null)
            {
                removeObject(thisPlatform);
            }

        }
        for(int i=0;i<theJellyfish.size();i++)
        {
            Actor thisJellyfish = theJellyfish.get(i);
            if(thisJellyfish.getWorld()!=null)
            {
                thisJellyfish.setLocation(thisJellyfish.getX(),thisJellyfish.getY()+ amount);
                if(thisJellyfish.getY()<=40||thisJellyfish.getY()>=getHeight()-40)
                {
                    removeJellyfish(thisJellyfish);
                }
            }
        }
        if(Greenfoot.getRandomNumber(30)<2 && worldHasMoved())
        {
            if(amount>0)
            {
                addJellyfish(getJellyX(),60);
            } else
            {
                addJellyfish(getJellyX(),getHeight()-60);
            }   
        }

    }

}

